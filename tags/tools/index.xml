<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tools on Zerobiron-Learn more write less</title>
    <link>zerobiron.github.io/tags/tools/</link>
    <description>Recent content in Tools on Zerobiron-Learn more write less</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh</language>
    <lastBuildDate>Sat, 12 Dec 2015 23:41:19 +0800</lastBuildDate>
    <atom:link href="zerobiron.github.io/tags/tools/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Vim与Eclipse的结合</title>
      <link>/zerobiron.github.io/post/eclim/</link>
      <pubDate>Sat, 12 Dec 2015 23:41:19 +0800</pubDate>
      
      <guid>/zerobiron.github.io/post/eclim/</guid>
      <description>

&lt;h1 id=&#34;vim与eclipse的结合:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;Vim与Eclipse的结合&lt;/h1&gt;

&lt;p&gt;既享受用vim写代码的畅快，又喜欢Eclipse的方便，人们想为什么不能二者得兼？于是便有牛人实现了这一神器——eclim&lt;/p&gt;

&lt;p&gt;开始学习Java但是神器Eclipse在Ubuntu下运行不流畅，十分吃内存。于是就想找个替代品。终于找到了eclim这个1+1&amp;gt;2的软件。&lt;/p&gt;

&lt;h3 id=&#34;安装:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;安装&lt;/h3&gt;

&lt;p&gt;eclim的官网&lt;a href=&#34;http://eclim.org/index.html#&#34;&gt;http://eclim.org/index.html#&lt;/a&gt;
里面的内容很多也算详细，但是安装过程中还是出了不少问题。&lt;/p&gt;

&lt;h4 id=&#34;注意版本:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;注意版本&lt;/h4&gt;

&lt;p&gt;eclim的要求是先安装&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.oracle.com/technetwork/java/javase/downloads/index.html&#34;&gt;Java Development Kit&lt;/a&gt; 1.7 or greater&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.vim.org/download.php&#34;&gt;Vim 7.1&lt;/a&gt; or greater&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://eclipse.org/downloads/index.php&#34;&gt;Eclipse 4.5.x (Mars)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Mac和Linux用户要有make和gcc&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;这里要注意，有两个问题：
1. jdk的版本要1.7或更高。之前安装的是Java8，Java8有个新特性是移除PermGen取而代之的是Metaspace.详细的资料参考这篇文章&lt;a href=&#34;http://javaeesupportpatterns.blogspot.co.uk/2013/02/java-8-from-permgen-to-metaspace.html&#34;&gt;Java 8: From PermGen to Metaspace&lt;/a&gt; 在安装过程中遇到问题是 对JVM的参数：PermSize 和 MaxPermSize 会被忽略并给出警告，而安装貌似需要设置MaxPermSize这个参数，结果就是报错。无奈最后把JDK-8完全卸载了，重新安装JDK-7(对应Java7)。
2. 现在的eclim版本是2.5.0支持的Eclipse是4.5.0. 我之前安装的4.5.1由于安装包自动安装导致Eclipse的根目录找不清楚，无法继续安装。最后还是换成了4.5.0版本才能安装成功。&lt;/p&gt;

&lt;p&gt;其他按照官方文档一步步来就可以。&lt;/p&gt;

&lt;h3 id=&#34;使用eclim完成项目-以java为例:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;使用eclim完成项目(以Java为例)&lt;/h3&gt;

&lt;p&gt;打开vim编辑器,输入&lt;code&gt;:ProjectCreate /path/to/my_project -n java&lt;/code&gt; 指令会新建一个java项目目录和基本的文件。建立项目后还可以查看已经建立的项目 &lt;code&gt;:ProjectList&lt;/code&gt; 返回结果&lt;code&gt;rojectName - (open|closed) - /project/root/path&lt;/code&gt;&lt;/p&gt;

&lt;h4 id=&#34;添加项目源目录:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;添加项目源目录&lt;/h4&gt;

&lt;p&gt;假定我们要在src目录下写java项目，首先要要在src目录下建立个Java文件夹。之后编辑.classpath文件 &lt;code&gt;vim /path/to/my_project/.classpath&lt;/code&gt; 文件应该像是这样&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;?xml version=&amp;quot;1.0&amp;quot; encoding=&amp;quot;UTF-8&amp;quot;?&amp;gt;
&amp;lt;classpath&amp;gt;
&amp;lt;classpathentry kind=&amp;quot;con&amp;quot; path=&amp;quot;org.eclipse.jdt.launching.JRE_CONTAINER&amp;quot;/&amp;gt;
&amp;lt;classpathentry kind=&amp;quot;output&amp;quot; path=&amp;quot;bin&amp;quot;/&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;classpathentry kind=&#34;src&#34; path=&#34;src/java&#34;/&gt;
&lt;/classpath&gt;&lt;/p&gt;

&lt;h4 id=&#34;开始写代码:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;开始写代码&lt;/h4&gt;

&lt;p&gt;在之前创建的目录src/Java下用vim新建个TestMain.java&lt;/p&gt;

&lt;p&gt;在vim的编辑模式可以按快捷键&lt;br /&gt;
&lt;code&gt;Ctrl + x&lt;/code&gt; 自动补全&lt;br /&gt;
&lt;code&gt;Ctrl + u&lt;/code&gt; 返回最初的状态&lt;/p&gt;

&lt;p&gt;之后编辑完毕执行 &lt;code&gt;:java&lt;/code&gt; 开始编译执行
更多特性等待发掘。&lt;/p&gt;

&lt;h3 id=&#34;结语:9a64dc308a20d78c18b68fe6346e7b3c&#34;&gt;结语&lt;/h3&gt;

&lt;p&gt;elicm 感觉应该还不错功能很强大而且主要的是没有Eclipse那么大，正合我意。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>sublime_text快捷键</title>
      <link>/zerobiron.github.io/post/sublime_text%E5%BF%AB%E6%8D%B7%E9%94%AE/</link>
      <pubDate>Fri, 27 Nov 2015 11:55:21 +0800</pubDate>
      
      <guid>/zerobiron.github.io/post/sublime_text%E5%BF%AB%E6%8D%B7%E9%94%AE/</guid>
      <description>

&lt;h1 id=&#34;sublime-text:86b3a916bfafdf014842cbeb962e574f&#34;&gt;Sublime Text&lt;/h1&gt;

&lt;p&gt;最好用的编辑器之一&lt;/p&gt;

&lt;h3 id=&#34;快捷键:86b3a916bfafdf014842cbeb962e574f&#34;&gt;快捷键&lt;/h3&gt;

&lt;p&gt;好的文本编辑器有很多其中我选择了Sublime Text.以下是常用的快捷键。&lt;/p&gt;

&lt;p&gt;Ctrl+D 选词 （反复按快捷键，即可继续向下同时选中下一个相同的文本进行同时编辑）&lt;/p&gt;

&lt;p&gt;Ctrl+G 跳转到相应的行&lt;/p&gt;

&lt;p&gt;Ctrl+J 合并行（已选择需要合并的多行时）&lt;/p&gt;

&lt;p&gt;Ctrl+L 选择整行（按住-继续选择下行）&lt;/p&gt;

&lt;p&gt;Ctrl+M 光标移动至括号内开始或结束的位置&lt;/p&gt;

&lt;p&gt;Ctrl+T 词互换&lt;/p&gt;

&lt;p&gt;Ctrl+U 软撤销&lt;/p&gt;

&lt;p&gt;Ctrl+P 查找当前项目中的文件和快速搜索；输入 @ 查找文件主标题/函数；或者输入 :
跳转到文件某行；&lt;/p&gt;

&lt;p&gt;Ctrl+R 快速列出/跳转到某个函数&lt;/p&gt;

&lt;p&gt;Ctrl+K Backspace 从光标处删除至行首&lt;/p&gt;

&lt;p&gt;Ctrl+K+B 开启/关闭侧边栏&lt;/p&gt;

&lt;p&gt;Ctrl+KK 从光标处删除至行尾&lt;/p&gt;

&lt;p&gt;Ctrl+K+T 折叠属性&lt;/p&gt;

&lt;p&gt;Ctrl+K+U 改为大写&lt;/p&gt;

&lt;p&gt;Ctrl+K+L 改为小写&lt;/p&gt;

&lt;p&gt;Ctrl+K+0 展开所有&lt;/p&gt;

&lt;p&gt;Ctrl+Enter 插入行后（快速换行）&lt;/p&gt;

&lt;p&gt;Ctrl+Tab 当前窗口中的标签页切换&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+A 选择光标位置父标签对儿&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+D 复制光标所在整行，插入在该行之前&lt;/p&gt;

&lt;p&gt;ctrl+shift+F 文件夹内查找，与普通编辑器不同的地方是sublime允许添加多个文件夹进行查找&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+K 删除整行&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+L 鼠标选中多行（按下快捷键），即可同时编辑这些行&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+M 选择括号内的内容（按住-继续选择父括号）&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+P 打开命令面板&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+/ 注释已选择内容&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+↑可以移动此行代码，与上行互换&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+↓可以移动此行代码，与下行互换&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+[ 折叠代码&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+] 展开代码&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+Enter 光标前插入行&lt;/p&gt;

&lt;p&gt;Ctrl+PageDown 、Ctrl+PageUp 文件按开启的前后顺序切换&lt;/p&gt;

&lt;p&gt;Ctrl+Z 撤销&lt;/p&gt;

&lt;p&gt;Ctrl+Y 恢复撤销&lt;/p&gt;

&lt;p&gt;Ctrl+F2 设置/取消书签&lt;/p&gt;

&lt;p&gt;Ctrl+/ 注释整行（如已选择内容，同“Ctrl+Shift+/”效果）&lt;/p&gt;

&lt;p&gt;Ctrl+鼠标左键 可以同时选择要编辑的多处文本&lt;/p&gt;

&lt;p&gt;Shift+鼠标右键（或使用鼠标中键）可以用鼠标进行竖向多行选择&lt;/p&gt;

&lt;p&gt;Shift+F2 上一个书签&lt;/p&gt;

&lt;p&gt;Shift+Tab 去除缩进&lt;/p&gt;

&lt;p&gt;Alt+Shift+1（非小键盘）窗口分屏，恢复默认1屏&lt;/p&gt;

&lt;p&gt;Alt+Shift+2 左右分屏-2列&lt;/p&gt;

&lt;p&gt;Alt+Shift+3 左右分屏-3列&lt;/p&gt;

&lt;p&gt;Alt+Shift+4 左右分屏-4列&lt;/p&gt;

&lt;p&gt;Alt+Shift+5 等分4屏&lt;/p&gt;

&lt;p&gt;Alt+Shift+8 垂直分屏-2屏&lt;/p&gt;

&lt;p&gt;Alt+Shift+9 垂直分屏-3屏&lt;/p&gt;

&lt;p&gt;Ctrl+Shift+分屏序号 将当前焦点页分配到分屏序号页&lt;/p&gt;

&lt;p&gt;Alt+. 闭合当前标签&lt;/p&gt;

&lt;p&gt;Alt+F3 选中文本按下快捷键，即可一次性选择全部的相同文本进行同时编辑&lt;/p&gt;

&lt;p&gt;Tab 缩进 自动完成&lt;/p&gt;

&lt;p&gt;F2 下一个书签&lt;/p&gt;

&lt;p&gt;F6 检测语法错误&lt;/p&gt;

&lt;p&gt;F9 行排序(按a-z)&lt;/p&gt;

&lt;p&gt;F11 全屏模式&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Jekyll快速开始</title>
      <link>/zerobiron.github.io/post/Jekyll%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</link>
      <pubDate>Fri, 27 Nov 2015 11:49:14 +0800</pubDate>
      
      <guid>/zerobiron.github.io/post/Jekyll%E5%BF%AB%E9%80%9F%E5%BC%80%E5%A7%8B/</guid>
      <description>

&lt;h1 id=&#34;jekyll-简单的博客生成工具:471405c134ce06a4e1511e52328587a6&#34;&gt;Jekyll ——简单的博客生成工具&lt;/h1&gt;

&lt;p&gt;&lt;a href=&#34;http://jekyllrb.com/&#34; title=&#34;jekyll&#34;&gt;Jekyll&lt;/a&gt;是一个开源的博客生成工具，类似WordPress，但又完全不同。正如官网介绍“Transform your plain text into static websites and blogs.”
jekyll只能生成静态的页面，无需数据库的支持。另外可以配合第三方服务,例如&lt;a href=&#34;https://disqus.com/&#34; title=&#34;Disqus&#34;&gt;Disqus&lt;/a&gt; （提供博客评论服务）。最关键的是jekyll可以免费部署在Github上，而且可以绑定自己的域名。&lt;/p&gt;

&lt;h3 id=&#34;安装:471405c134ce06a4e1511e52328587a6&#34;&gt;安装&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;首先确保有正确的环境&lt;/li&gt;
&lt;li&gt;Ruby&lt;/li&gt;
&lt;li&gt;RubyGems&lt;/li&gt;
&lt;li&gt;Mac or Linux  windows没有测试&lt;/li&gt;

&lt;li&gt;&lt;p&gt;NodeJS 或者其他支持JavaScript的平台也可以（自己在这里吃了亏）&lt;/p&gt;&lt;/li&gt;

&lt;li&gt;&lt;p&gt;通过RubyGems安装jekll
&lt;code&gt;$ gem install jekyll&lt;/code&gt;
安装后就可以开始搭建blog了&lt;/p&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&#34;使用jekyll-bootstrap工具:471405c134ce06a4e1511e52328587a6&#34;&gt;使用Jekyll Bootstrap工具&lt;/h3&gt;

&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为了方便我是直接选择了用&lt;a href=&#34;http://jekyllbootstrap.com/&#34; title=&#34;Jekyll Bootstrap&#34;&gt;Jekyll Bootstrap&lt;/a&gt; 简单快捷还有很多模板可以使用或参考。
首先要有一个github的账户，然后新建仓库命名为USERNAME.github.io （USERNAME换成自己的用户名）
在本地fork代码安装Jekyll-Bootstrap&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git clone https://github.com/plusjade/jekyll-bootstrap.git XXX        #克隆git到本地命名为XXX
$ cd XXX     #进入该目录
$ gi t remote set-url origin git@github.com:USERNAME/USERNAME.github.com.git
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;这时你已经有了自己博客了，怎么样很简单吧。
运行&lt;code&gt;$ jekyll serve&lt;/code&gt;
测试成功&lt;/p&gt;

&lt;h3 id=&#34;发表文章:471405c134ce06a4e1511e52328587a6&#34;&gt;发表文章&lt;/h3&gt;

&lt;h4 id=&#34;1-新建一个帖子-post:471405c134ce06a4e1511e52328587a6&#34;&gt;1. 新建一个帖子（post）&lt;/h4&gt;

&lt;p&gt;&lt;code&gt;$ rake post tilte=&amp;quot;Hello World&amp;quot;&lt;/code&gt;jekyll会自动新建一个文件默认名是时间。&lt;/p&gt;

&lt;h4 id=&#34;2-新建一个页面-pages:471405c134ce06a4e1511e52328587a6&#34;&gt;2. 新建一个页面（pages）&lt;/h4&gt;

&lt;blockquote&gt;
&lt;p&gt;除了文章外还能新建页面
&lt;code&gt;$ rake page name=&amp;quot;about.md&amp;quot;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;新建嵌套页面
&lt;code&gt;$ rake page name=&amp;quot;pages/about&amp;quot;&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h4 id=&#34;3-发布:471405c134ce06a4e1511e52328587a6&#34;&gt;3. 发布&lt;/h4&gt;

&lt;p&gt;写完文章后就要发布了，通过git可以很容易的完成。&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;$ git add .
$ git commit -m &amp;quot;Add new content&amp;quot;
$ git push origin master
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&#34;4-个性化:471405c134ce06a4e1511e52328587a6&#34;&gt;4. 个性化&lt;/h4&gt;

&lt;p&gt;用人家的模板有了自己的博客对一般不想折腾的够了，但是有些朋友会有自己的创意想改动一些。Jekyll Bootstrap
支持定制。除了有很多主题供选择外有一些具体的设置。如设置博客地址格式、开启评论功能、设置基本路径、提供分析等等。总之个人觉得对一般的需求都可以满足。想要更高级的设置还可以看到Jekyll Bootstrap提供了各种可用的API，可以调用让自己的博客更加漂亮。&lt;/p&gt;

&lt;h4 id=&#34;5-补充:471405c134ce06a4e1511e52328587a6&#34;&gt;5. 补充&lt;/h4&gt;

&lt;p&gt;不知怎么直接调用jekyll的官方引擎_jekyll serve_生成静态html,结果显示某些代码支持的不好。有网友说是官方引擎和github pages的自己的引擎有些差别，markdown的解析器不同,导致用官方jekyll测试生效，推到github pages后却不会生效。所以为了发布到github上文章正确可以在本地搭建github pages本地环境预览一下。[搭建方法][&lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages&#34;&gt;https://help.github.com/articles/using-jekyll-with-pages&lt;/a&gt;] 试了下发现果然用github pages的引擎比较好&lt;/p&gt;

&lt;h3 id=&#34;总结:471405c134ce06a4e1511e52328587a6&#34;&gt;总结&lt;/h3&gt;

&lt;p&gt;用Jekyll Bootstrap真的很方便。第一次写点儿算是教程的东西大部分来自网络。其实就是给自己折腾做个纪念吧，毕竟刚刚接触这个很好奇也很有动力。
感谢Jekyll Bootstrap的开发者们，在模板介绍页面开发者们提到这是个未完成的模板，想要完成它需要大家的共同努力，所以少年们可以试试帮助开发一下。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>